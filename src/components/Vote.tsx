import { Typography, Spin } from 'antd'
import { useState } from 'react'

const { Title, Text } = Typography

interface IAnswer {
  symbol: string
  description: string
  answer: number
}

interface IQuestion {
  question: string
  answers: IAnswer[]
}

const questions: IQuestion[] = [
  {
    question: '‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏¥‡∏î‡∏ß‡πà‡∏≤‡∏£‡∏±‡∏ê‡∏ö‡∏≤‡∏•‡∏ä‡∏∏‡∏î‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ó‡∏∏‡∏à‡∏£‡∏¥‡∏ï‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?',
    answers: [
      {
        symbol: 'üòÄ',
        description: '‡πÑ‡∏°‡πà‡∏°‡∏µ',
        answer: 1,
      },
      {
        symbol: 'üòå',
        description: '‡∏ô‡πâ‡∏≠‡∏¢',
        answer: 2,
      },
      {
        symbol: 'üòû',
        description: '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á',
        answer: 3,
      },
      {
        symbol: 'üò†',
        description: '‡∏Ñ‡πà‡∏≠‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏°‡∏≤‡∏Å',
        answer: 4,
      },
      {
        symbol: 'üò§',
        description: '‡∏°‡∏≤‡∏Å',
        answer: 5,
      },
    ],
  },
  {
    question: '‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏¥‡∏î‡∏ß‡πà‡∏≤‡∏£‡∏±‡∏ê‡∏ö‡∏≤‡∏•‡∏ä‡∏∏‡∏î‡∏ô‡∏µ‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?',
    answers: [
      {
        symbol: 'üòÄ',
        description: '‡πÅ‡∏¢‡πà',
        answer: 1,
      },
      {
        symbol: 'üòå',
        description: '‡∏Ñ‡πà‡∏≠‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡πÅ‡∏¢‡πà',
        answer: 2,
      },
      {
        symbol: 'üòû',
        description: '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á',
        answer: 3,
      },
      {
        symbol: 'üò†',
        description: '‡∏Ñ‡πà‡∏≠‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏î‡∏µ',
        answer: 4,
      },
      {
        symbol: 'üò§',
        description: '‡∏î‡∏µ‡∏°‡∏≤‡∏Å',
        answer: 5,
      },
    ],
  },
]

function Vote() {
  const [index, setIndex] = useState<number>(0)
  const handleOnAnswer = (answer: number) => {
    console.log('User has been answered.')
    // go to next question
    if (index === 0) {
      setIndex((i) => i + 1)
    } else if (index === 1) {
      setIndex(-1)
    }
  }
  return (
    <div id="vote" className="App-Vote-content">
      {index !== -1 && (
        <div>
          <Title>{questions[index].question}</Title>
          <div className="vote-answer-box">
            {questions[index].answers.map((answer, index) => (
              <div key={index}>
                <div
                  className="answer-btn"
                  onClick={() => handleOnAnswer(answer.answer)}
                >
                  <Title style={{ margin: 0 }}>{answer.symbol}</Title>
                </div>
                <Text strong>{answer.description}</Text>
              </div>
            ))}
          </div>
        </div>
      )}
      {index === -1 && (
        <div>
          <Title>‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô</Title>
          <Title level={2}>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ôüòá</Title>
          <Spin size="large"/>
        </div>
      )}
    </div>
  )
}

export default Vote
